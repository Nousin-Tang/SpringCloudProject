server:
  port: 9000


nousin:
  base:
    request-path: /gateway
  jwt:
    sign-key: 123456

  server:
    order: order-service
    storage: storage-service
    account: acount-service
    auth: auth-service


# Spring
spring:
  # 应用名称
  application:
    name: gateway
  # Spring Cloud 配置
  cloud:
    # Nacos
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    # Gateway
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能
          lower-case-service-id: true #使用小写服务名，默认是大写
          #filters:
            #- StripPrefix=1 # 注意：Gateway默认转发是全路径的，设置StripPrefix=1表示从二级url路径转发，
      routes:
        - id: ${nousin.server.auth}_route_id
          uri: lb://${nousin.server.auth}
          predicates:
            - Path=/oauth/**,/auth/**

        - id: ${nousin.server.order}_route_id # 表示路由的唯一id
          # uri: ${service-url.user-service}/user/{id} #匹配后路由地址
          uri: lb://${nousin.server.order} # 指向注册中心的服务，使用lb://服务名称，当然也可以通过http://localhost:8080指向服务
          predicates: # 断言，路径相匹配的进行路由
            - Path=/order/** # 表示path地址，根据url，以order开头的会被转发到order-service服务上，需要注意的是后面/**和/*的区别
          #filters:
            #- StripPrefix=1 # 注意：Gateway默认转发是全路径的，设置StripPrefix=1表示从二级url路径转发，本路由中加入
        # storage
        - id: ${nousin.server.storage}_route_id
          uri: lb://${nousin.server.storage}
          predicates:
            - Path=/storage/**
        # account
        - id: ${nousin.server.account}_route_id
          uri: lb://${nousin.server.account}
          predicates:
            - Path=/account/**


security:
  oauth2:
    client:
      clientId: client
      clientSecret: secret
      grant-type: refresh_token,password
      scope: all
      accessTokenUri: lb://${nousin.server.auth}/oauth/token
#      userAuthorizationUri: lb://${nousin.server.auth}/oauth/authorize
      access-token-validity-seconds: 7200
      clientAuthenticationScheme: form
    resource:
      jwt:
        key-uri: lb://${nousin.server.auth}/oauth/token_key
      user-info-uri: lb://${nousin.server.auth}/auth/get


# logging
logging:
  level:
    org.springframework.cloud.gateway: info